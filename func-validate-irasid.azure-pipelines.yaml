name: $(Build.DefinitionName)_$(Build.SourceBranchName)_$(date:yyyyMMdd)$(rev:.r)

pool:
  name: "rsp-manageddevopspool"

trigger:
  branches:
    include:
      - main
  paths:
    include:
      - ValidateIrasId/**
      - ValidateIrasIdTests/**


parameters:
  - name: devops_library_branch
    displayName: DevOps Library Branch
    type: string
    default: main

  - name: run_sonarcloud_analysis
    displayName: Run Sonar Cloud Analysis
    type: boolean
    default: true

  - name: skip_deployment
    displayName: Skip Deployment
    type: boolean
    default: true

variables:
  - name: vstsFeed
    value: "0e030eb0-cb72-4f42-b99a-26e6544271c3/0a3e0ad2-23b6-4e8b-ae12-cd6d01fe97e7"
  - name: solution
    value: "**/*.sln"
  - name: project
    value: "**/*.csproj"
  - name: projectForContainerBuild
    value: "ValidateIrasId.csproj"
  - name: buildConfiguration
    value: "Release"
  - name: service_connection
    value: "ARM Connection DW"    

  - name: appSettingsJson
    value: |
      [
        {
          "name": "AppSettings__AzureAppConfiguration__Endpoint",
          "value": "$(AppConfigurationEndpoint)",
          "slotSetting": false
        },
        {
          "name": "AppSettings__AzureAppConfiguration__IdentityClientID",
          "value": "$(AppConfigurationClientID)",
          "slotSetting": false
        }
      ]

resources:
  repositories:
    - repository: library
      type: github
      name: 'HealthResearchAuthority/rsp-azure-devops-library'
      endpoint: AzureDevOpsToGitHubConnection
      ref: ${{ parameters.devops_library_branch }}

stages:
  - stage: Build
    displayName: "Build Stage"
    condition: eq('${{ parameters.skip_deployment }}', 'true')
    jobs:
      - template: jobs/build.yaml@library
        parameters:
          run_github_security_scan: false
          sonar_project_key: HealthResearchAuthority_rsp-validate-irasid-function
          sonar_project_name: rsp-validate-irasid-function
          run_sonarcloud_analysis: ${{ parameters.run_sonarcloud_analysis }}

  - stage: DataWarehouse
    displayName: "Deploy to DataWarehouse"
    variables:
      - group: 'DataWarehouseEnvironment'
      - name: FunctionAppName
        value: "func-validate-irasid"
    condition: eq('${{ parameters.skip_deployment }}', 'false')
    jobs:
      - template: jobs/deployFunction.yaml@library
        parameters:
          appSettings: $(appSettingsJson)
